module lcd(
  input p_clock,
  output reg lcd_rs,
  output reg lcd_en,
  output reg[7:0] p_led
  );
  reg [27:0]clk_div=28'd0;
  reg[15:0]second=16'd0;
  reg[7:0]sec=8'd0;
  reg[7:0]min=8'd0;
  reg[15:0]minute=16'd0;
  reg[15:0]hour=16'd0;
  reg[7:0]hr=8'd0;
  //parameter length=45;
  /**************************/
  integer counter;
  reg flag=0;
  reg[4:0] pointer=5'd0;
  wire[8:0] memoory[0:31];
  assign memory [0]={1'b0,8'h38};
  assign memory [1]={1'b0,8'h06};
  assign memory [2]={1'b0,8'h0c};
  assign memory [3]={1'b0,8'h01};
  
 assign memory [19]={1'b1,"T"};
 assign memory [20]={1'b1,"I"};
 assign memory [21]={1'b1,"M"};
 assign memory [22]={1'b1,"E"};
 assign memory [23]={1'b0,8'hc0};
 assign memory [24]={1'b1,hour{15:8}};
 assign memory [25]={1'b1,hour{7:0}};
 assign memory [26]={1'b1,":"};
 assign memory [27]={1'b1,minute[15:8}};
 assign memory [28]={1'b1,minute[7:0]};
 assign memory [29]={1'b1,":"};
 assign memory [19]={1'b1,second[15:8]};
            
 /*assign memory[28]={1'b1,"R"};
assign memory[29]={1'b1,"T"};
assign memory[30]={1'b1,"M"};
assign memory[31]={1'b1,"E"};
assign memory[32]={1'b1,"N"};
assign memory[33]={1'b1,"T"};
assign memory[34]={1'b1,"*"};
assign memory[35]={1'b1,"*"};
assign memory[36]={1'b0,8'hc0};+
assign memory[37]={1'b1,hour[15:8]};
assign memory[38]={1'b1,hour[7:0]};
assign memory[39]={1'b1,":"};
assign memory[40]={1'b1,minute[15:8]};
assign memory[41]={1'b1,minute[7:0]};
assign memory[42]={1'b1,":"};
assign memory[43]={1'b1,second[15:8]};  
assign memory[44]={1'b1,second[7:0]}; 
assign memory[45]={1'b1,"*"};*/ 


always@(posedge p_clock)
begin 
clk_div=clk_div+1;        
if(clk_div==28'd100000000)
begin
sec=sec+1;
clk_div=0;
if(sec==60)
begin
sec=0;min=min+1;
end
if(min==60)
begin
min=0;hr=hr+1;
end
second=BCD(sec);
minute=BCD(min);
hour=BCD(hr);
end
end

function[15:0] BCD;
input [7:0] value;
reg[3:0] t;
reg[7:0] o;
begin
if(value<10)
begin t=0;o=value; end
else if(value>=10 && value<20)
begin t=1; o=value-10; end
else if(value>=20 && value<30)
begin t=2; o=value-20; end
else if(value>=30 && value<40)
begin t=3; o=value-30; end
else if(value>=40 && value<50)
begin t=4; o=value-40; end
else if(value>=50 && value<60)
begin t=5; o=value-50; end

BCD=(t+7'd48,o+7'd48);
end
endfunction

always@(posedge p_clock)
begin
counter=counter+1;
lcd_en=counter[11];
end

always@(negedge lcd_en)
begin
lcd_rs=memory[pointer][8];
p_lcd=memory[pointer[7:0];
if(pointer==5'd31)pointer=5'd23;
else pointer=pointer+1;
end
endmodule


